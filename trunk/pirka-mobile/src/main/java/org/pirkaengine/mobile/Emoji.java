package org.pirkaengine.mobile;

/**
 * 
 * 
 * U+26C5/SUN_BEHIND_CLOUD 「ときどき曇り」は絵文字２つ（google提案）か対応無し（仕様）で意見が分かれている
 * 代替文字はGoogle提案のドキュメントから引用
 * Unicode上で2文字で表現する絵文字１１種
 * <p></p>
 * @author shuji.w6e
 * @since 0.1.0
 */
public enum Emoji {

    NUMBER_SIGN_WITH_KEYCAP(new char[] {
            0x0023, 0x20E3
    }, 0xF985, 0xF489, 0xF7B0), ZERO_WITH_KEYCAP(new char[] {
            0x0030, 0x20E3
    }, 0xF990, 0xF7C9, 0xF7C5), ONE_WITH_KEYCAP(new char[] {
            0x0031, 0x20E3
    }, 0xF987, 0xF6FB, 0xF7BC), TWO_WITH_KEYCAP(new char[] {
            0x0032, 0x20E3
    }, 0xF988, 0xF6FC, 0xF7BD), THREE_WITH_KEYCAP(new char[] {
            0x0033, 0x20E3
    }, 0xF989, 0xF740, 0xF7BE), FOUR_WITH_KEYCAP(new char[] {
            0x0034, 0x20E3
    }, 0xF98A, 0xF741, 0xF7BF), FIVE_WITH_KEYCAP(new char[] {
            0x0035, 0x20E3
    }, 0xF98B, 0xF742, 0xF7C0), SIX_WITH_KEYCAP(new char[] {
            0x0036, 0x20E3
    }, 0xF98C, 0xF743, 0xF7C1), SEVEN_WITH_KEYCAP(new char[] {
            0x0037, 0x20E3
    }, 0xF98D, 0xF744, 0xF7C2), EIGNT_WITH_KEYCAP(new char[] {
            0x0038, 0x20E3
    }, 0xF98E, 0xF745, 0xF7C3), NINE_WITH_KEYCAP(new char[] {
            0x0039, 0x20E3
    }, 0xF98F, 0xF746, 0xF7C4), SUN_BEHIND_CLOUD(0x26C5, 0xF89FF8A0, 0xF666, 0xF98BF98A),
    // ここから自動生成
    COPYRIGHT_SIGN(0xA9, 0xF9D6, 0xF774, 0xF7EE),
    REGISTERED_SIGN(0xAE, 0xF9DB, 0xF775, 0xF7EF),
    EN_SPACE(0x2002, 0x0, 0xF7AA, 0x0, "[]"),
    EM_SPACE(0x2003, 0x0, 0xF7A9, 0x0, "[]"),
    FOUR_PER_EM_SPACE(0x2005, 0x0, 0xF7AB, 0x0, "[]"),
    DOUBLE_EXCLAMATION_MARK(0x203C, 0xF9A9, 0xF3F1, 0x0, "[]"),
    EXCLAMATION_QUESTION_MARK(0x2049, 0xF9A8, 0xF3F0, 0x0, "[]"),
    TRADE_MARK_SIGN(0x2122, 0xF9D7, 0xF76A, 0xFBD7),
    INFORMATION_SOURCE(0x2139, 0x0, 0xF74F, 0x0, "[]"),
    LEFT_RIGHT_ARROW(0x2194, 0xF9E1, 0xF47E, 0x0, "[]"),
    UP_DOWN_ARROW(0x2195, 0xF9E2, 0xF480, 0x0, "[]"),
    NORTH_WEST_ARROW(0x2196, 0xF8F8, 0xF768, 0xF7D7),
    NORTH_EAST_ARROW(0x2197, 0xF8D9, 0xF771, 0xF7D6),
    SOUTH_EAST_ARROW(0x2198, 0xF8F7, 0xF769, 0xF7D8),
    SOUTH_WEST_ARROW(0x2199, 0xF949, 0xF772, 0xF7D9),
    LEFTWARDS_ARROW_WITH_HOOK(0x21A9, 0xF97E, 0xF779, 0x0, "[]"),
    RIGHTWARDS_ARROW_WITH_HOOK(0x21AA, 0x0, 0xF778, 0x0, "[]"),
    WATCH(0x231A, 0xF9C4, 0xF797, 0x0, "[]"),
    HOURGLASS(0x231B, 0x0, 0xF798, 0x0, "[]"),
    BLACK_RIGHT_POINTING_DOUBLE_TRIANGLE(0x23E9, 0x0, 0xF74C, 0xF7DC, "[]"),
    BLACK_LEFT_POINTING_DOUBLE_TRIANGLE(0x23EA, 0x0, 0xF74B, 0xF7DD, "[]"),
    BLACK_UP_POINTING_DOUBLE_TRIANGLE(0x23EB, 0x0, 0xF761, 0x0, "[]"),
    BLACK_DOWN_POINTING_DOUBLE_TRIANGLE(0x23EC, 0x0, 0xF760, 0x0, "[]"),
    ALARM_CLOCK(0x23F0, 0xF95E, 0xF7B1, 0x0, "[]"),
    HOURGLASS_WITH_FLOWING_SAND(0x23F3, 0xF9C1, 0xF654, 0x0, "[]"),
    CIRCLED_LATIN_CAPITAL_LETTER_M(0x24C2, 0xF8BD, 0x0, 0x0, "[]"),
    BLACK_SMALL_SQUARE(0x25AA, 0x0, 0xF74E, 0x0, "[]"),
    WHITE_SMALL_SQUARE(0x25AB, 0x0, 0xF74D, 0x0, "[]"),
    BLACK_RIGHT_POINTING_TRIANGLE(0x25B6, 0x0, 0xF74A, 0xF7DA, "[]"),
    BLACK_LEFT_POINTING_TRIANGLE(0x25C0, 0x0, 0xF749, 0xF7DB, "[]"),
    WHITE_MEDIUM_SQUARE(0x25FB, 0x0, 0xF754, 0x0, "[]"),
    BLACK_MEDIUM_SQUARE(0x25FC, 0x0, 0xF755, 0x0, "[]"),
    WHITE_MEDIUM_SMALL_SQUARE(0x25FD, 0x0, 0xF750, 0x0, "[]"),
    BLACK_MEDIUM_SMALL_SQUARE(0x25FE, 0x0, 0xF751, 0x0, "[]"),
    BLACK_SUN_WITH_RAYS(0x2600, 0xF89F, 0xF660, 0xF98B),
    CLOUD(0x2601, 0xF8A0, 0xF665, 0xF98A),
    BLACK_TELEPHONE(0x260E, 0xF8E8, 0xF7B3, 0xF949),
    BALLOT_BOX_WITH_CHECK(0x2611, 0x0, 0xF7D9, 0x0, "[]"),
    UMBRELLA_WITH_RAIN_DROPS(0x2614, 0xF8A1, 0xF664, 0xF98C),
    HOT_BEVERAGE(0x2615, 0xF8D1, 0xF7B4, 0xF986),
    WHITE_UP_POINTING_INDEX(0x261D, 0x0, 0xF6CF, 0xF94F, "[]"),
    WHITE_SMILING_FACE(0x263A, 0x0, 0xF6D4, 0xFB54, "[]"),
    ARIES(0x2648, 0xF8A7, 0xF667, 0xF7DF),
    TAURUS(0x2649, 0xF8A8, 0xF668, 0xF7E0),
    GEMINI(0x264A, 0xF8A9, 0xF669, 0xF7E1),
    CANCER(0x264B, 0xF8AA, 0xF66A, 0xF7E2),
    LEO(0x264C, 0xF8AB, 0xF66B, 0xF7E3),
    VIRGO(0x264D, 0xF8AC, 0xF66C, 0xF7E4),
    LIBRA(0x264E, 0xF8AD, 0xF66D, 0xF7E5),
    SCORPIUS(0x264F, 0xF8AE, 0xF66E, 0xF7E6),
    SAGITTARIUS(0x2650, 0xF8AF, 0xF66F, 0xF7E7),
    CAPRICORN(0x2651, 0xF8B0, 0xF670, 0xF7E8),
    AQUARIUS(0x2652, 0xF8B1, 0xF671, 0xF7E9),
    PISCES(0x2653, 0xF8B2, 0xF672, 0xF7EA),
    BLACK_SPADE_SUIT(0x2660, 0xF8EF, 0xF7BE, 0xF7AE),
    BLACK_CLUB_SUIT(0x2663, 0xF8F1, 0xF7C0, 0xF7AF),
    BLACK_HEART_SUIT(0x2665, 0xF8EE, 0xF378, 0xF7AC),
    BLACK_DIAMOND_SUIT(0x2666, 0xF8F0, 0xF7BF, 0xF7AD),
    HOT_SPRINGS(0x2668, 0xF99C, 0xF695, 0xF763),
    BLACK_UNIVERSAL_RECYCLING_SYMBOL(0x267B, 0xF9DA, 0xF47D, 0x0, "[]"),
    WHEELCHAIR_SYMBOL(0x267F, 0xF8FC, 0xF657, 0xF7AA),
    ANCHOR(0x2693, 0x0, 0xF682, 0x0, "[]"),
    WARNING_SIGN(0x26A0, 0xF9DC, 0xF659, 0xF7F2),
    HIGH_VOLTAGE_SIGN(0x26A1, 0xF8A3, 0xF65F, 0xF77D),
    MEDIUM_WHITE_CIRCLE(0x26AA, 0x0, 0xF756, 0x0, "[]"),
    MEDIUM_BLACK_CIRCLE(0x26AB, 0x0, 0xF757, 0x0, "[]"),
    SOCCER_BALL(0x26BD, 0xF8B7, 0xF68F, 0xF958),
    BASEBALL(0x26BE, 0xF8B4, 0xF693, 0xF956),
    SNOWMAN_WITHOUT_SNOW(0x26C4, 0xF8A2, 0xF65D, 0xF989),
    OPHIUCHUS(0x26CE, 0x0, 0xF673, 0xF7EB, "[]"),
    NO_ENTRY(0x26D4, 0x0, 0xF65C, 0x0, "[]"),
    CHURCH(0x26EA, 0x0, 0xF7EB, 0xF977, "[]"),
    FOUNTAIN(0x26F2, 0x0, 0xF342, 0xF761, "[]"),
    FLAG_IN_HOLE(0x26F3, 0xF8B5, 0xF7B6, 0xF954),
    SAILBOAT(0x26F5, 0xF947, 0xF68D, 0xF95C),
    TENT(0x26FA, 0x0, 0xF343, 0xF762, "[]"),
    FUEL_PUMP(0x26FD, 0xF8CC, 0xF78E, 0xF97A),
    BLACK_SCISSORS(0x2702, 0xF8D6, 0xF6EF, 0xF9B3),
    WHITE_HEAVY_CHECK_MARK(0x2705, 0x0, 0xF77A, 0x0, "[]"),
    AIRPLANE(0x2708, 0xF8C3, 0xF68C, 0xF95D),
    ENVELOPE(0x2709, 0xF977, 0xF6FA, 0x0, "[]"),
    RAISED_FIST(0x270A, 0xF8F4, 0xF488, 0xF950),
    RAISED_HAND(0x270B, 0xF8F6, 0xF7C4, 0xF952),
    VICTORY_HAND(0x270C, 0xF8F5, 0xF7C3, 0xF951),
    PENCIL(0x270F, 0xF9BE, 0xF679, 0x0, "[]"),
    BLACK_NIB(0x2712, 0xF952, 0xF7DA, 0x0, "[]"),
    HEAVY_CHECK_MARK(0x2714, 0x0, 0xF773, 0x0, "[]"),
    HEAVY_MULTIPLICATION_X(0x2716, 0x0, 0xF76B, 0x0, "[]"),
    SPARKLES(0x2728, 0xF99F, 0xF37E, 0xF9CE),
    EIGHT_SPOKED_ASTERISK(0x2733, 0x0, 0xF75A, 0xF7A6, "[]"),
    EIGHT_POINTED_BLACK_STAR(0x2734, 0x0, 0xF651, 0xF7A5, "[]"),
    SNOWFLAKE(0x2744, 0x0, 0xF662, 0x0, "[雪結晶]"),
    SPARKLE(0x2747, 0x0, 0xF644, 0x0, "[]"),
    CROSS_MARK(0x274C, 0x0, 0xF76C, 0xF9D3, "[]"),
    NEGATIVE_SQUARED_CROSS_MARK(0x274E, 0x0, 0xF76D, 0x0, "[]"),
    BLACK_QUESTION_MARK_ORNAMENT(0x2753, 0x0, 0xF65B, 0xF960, "[]"),
    WHITE_QUESTION_MARK_ORNAMENT(0x2754, 0x0, 0x0, 0xF9D6, "[]"),
    WHITE_EXCLAMATION_MARK_ORNAMENT(0x2755, 0x0, 0x0, 0xF9D7, "[]"),
    HEAVY_EXCLAMATION_MARK_SYMBOL(0x2757, 0xF9A7, 0xF65A, 0xF961),
    HEAVY_BLACK_HEART(0x2764, 0xF991, 0xF7B2, 0xF962),
    HEAVY_PLUS_SIGN(0x2795, 0x0, 0xF758, 0x0, "[]"),
    HEAVY_MINUS_SIGN(0x2796, 0x0, 0xF759, 0x0, "[]"),
    HEAVY_DIVISION_SIGN(0x2797, 0x0, 0xF770, 0x0, "[]"),
    BLACK_RIGHTWARDS_ARROW(0x27A1, 0x0, 0xF76E, 0xF7D4, "[]"),
    CURLY_LOOP(0x27B0, 0xF9AF, 0xF3F2, 0x0, "[]"),
    ARROW_POINTING_RIGHTWARDS_THEN_CURVING_UPWARDS(0x2934, 0xF99A, 0xF3EE, 0x0, "[]"),
    ARROW_POINTING_RIGHTWARDS_THEN_CURVING_DOWNWARDS(0x2935, 0xF9A5, 0xF3EF, 0x0, "[]"),
    LEFTWARDS_BLACK_ARROW(0x2B05, 0x0, 0xF76F, 0xF7D5, "[]"),
    UPWARDS_BLACK_ARROW(0x2B06, 0x0, 0xF75B, 0xF7D2, "[]"),
    DOWNWARDS_BLACK_ARROW(0x2B07, 0x0, 0xF75C, 0xF7D3, "[]"),
    BLACK_LARGE_SQUARE(0x2B1B, 0x0, 0xF765, 0x0, "[]"),
    WHITE_LARGE_SQUARE(0x2B1C, 0x0, 0xF764, 0x0, "[]"),
    WHITE_MEDIUM_STAR(0x2B50, 0x0, 0xF663, 0xF9CF, "[]"),
    HEAVY_LARGE_CIRCLE(0x2B55, 0x0, 0xF381, 0xF9D2, "[]"),
    WAVY_DASH(0x3030, 0xF9AE, 0x0, 0x0, "[]"),
    PART_ALTERNATION_MARK(0x303D, 0x0, 0x0, 0xF76C, "[]"),
    CIRCLED_IDEOGRAPH_CONGRATULATION(0x3297, 0x0, 0xF36C, 0xF9AD, "[]"),
    CIRCLED_IDEOGRAPH_SECRET(0x3299, 0xF9D9, 0xF6CA, 0xF9B5),
    MAHJONG_TILE_RED_DRAGON(0x1F004, 0x0, 0xF344, 0xF76D, "[]"),
    PLAYING_CARD_BLACK_JOKER(0x1F0CF, 0x0, 0xF473, 0x0, "[]"),
    NEGATIVE_SQUARED_LATIN_CAPITAL_LETTER_A(0x1F170, 0x0, 0xF3E7, 0xFBD2, "[]"),
    NEGATIVE_SQUARED_LATIN_CAPITAL_LETTER_B(0x1F171, 0x0, 0xF3E8, 0xFBD3, "[]"),
    NEGATIVE_SQUARED_LATIN_CAPITAL_LETTER_O(0x1F17E, 0x0, 0xF3E9, 0xFBD5, "[]"),
    NEGATIVE_SQUARED_LATIN_CAPITAL_LETTER_P(0x1F17F, 0xF8CD, 0xF67E, 0xF790),
    NEGATIVE_SQUARED_AB(0x1F18E, 0x0, 0xF3EA, 0xFBD4, "[]"),
    SQUARED_CL(0x1F191, 0xF980, 0xF7C8, 0x0, "[]"),
    SQUARED_COOL(0x1F192, 0x0, 0xF358, 0xF7B4, "[]"),
    SQUARED_FREE(0x1F193, 0xF97B, 0xF795, 0x0, "[]"),
    SQUARED_ID(0x1F194, 0xF97C, 0xF35B, 0xF7C9),
    SQUARED_NEW(0x1F195, 0xF982, 0xF7E5, 0xF7B2),
    SQUARED_NG(0x1F196, 0xF9D4, 0x0, 0x0, "[]"),
    SQUARED_OK(0x1F197, 0xF9B0, 0xF7CA, 0xF7ED),
    SQUARED_SOS(0x1F198, 0x0, 0xF6C1, 0x0, "[]"),
    SQUARED_UP_WITH_EXCLAMATION_MARK(0x1F199, 0x0, 0xF6E8, 0xF7B3, "[]"),
    SQUARED_VS(0x1F19A, 0x0, 0xF345, 0xF76E, "[]"),
    SQUARED_KATAKANA_KOKO(0x1F201, 0x0, 0x0, 0xF7A3, "[]"),
    SQUARED_KATAKANA_SA(0x1F202, 0x0, 0xF35A, 0xF7C8, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_7121(0x1F21A, 0x0, 0x0, 0xF7B6, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_6307(0x1F22F, 0x0, 0xF35E, 0xF7CC, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_7981(0x1F232, 0xF9DD, 0x0, 0x0, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_7A7A(0x1F233, 0xF9DE, 0xF35D, 0xF7CB),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_5408(0x1F234, 0xF9DF, 0x0, 0x0, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_6E80(0x1F235, 0xF9E0, 0xF35C, 0xF7CA),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_6709(0x1F236, 0x0, 0x0, 0xF7B5, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_6708(0x1F237, 0x0, 0x0, 0xF7B7, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_7533(0x1F238, 0x0, 0x0, 0xF7B8, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_5272(0x1F239, 0x0, 0xF359, 0xF7C7, "[]"),
    SQUARED_CJK_UNIFIED_IDEOGRAPH_55B6(0x1F23A, 0x0, 0xF35F, 0xF7CD, "[]"),
    CIRCLED_IDEOGRAPH_ADVANTAGE(0x1F250, 0x0, 0xF6D0, 0xF7C6, "[]"),
    CIRCLED_IDEOGRAPH_ACCEPT(0x1F251, 0x0, 0xF7D8, 0x0, "[]"),
    CYCLONE(0x1F300, 0xF8A4, 0xF641, 0xFB84),
    FOGGY(0x1F301, 0xF8A5, 0xF7B5, 0x0, "[霧]"),
    CLOSED_UMBRELLA(0x1F302, 0xF8A6, 0xF3BC, 0xFB7C),
    NIGHT_WITH_STARS(0x1F303, 0xF957, 0xF3C5, 0xFB8C),
    SUNRISE_OVER_MOUNTAINS(0x1F304, 0x0, 0x0, 0xF98E, "[]"),
    SUNRISE(0x1F305, 0x0, 0xF3C8, 0xFB8A, "[]"),
    CITYSCAPE_AT_DUSK(0x1F306, 0x0, 0xF34D, 0xF787, "[夕焼け]"),
    SUNSET_OVER_BUILDINGS(0x1F307, 0x0, 0x0, 0xFB8B, "[]"),
    RAINBOW(0x1F308, 0x0, 0xF3C6, 0xFB8D, "[虹]"),
    BRIDGE_AT_NIGHT(0x1F309, 0x0, 0xF698, 0x0, "[]"),
    WATER_WAVE(0x1F30A, 0xF9E4, 0xF481, 0xFB7E),
    VOLCANO(0x1F30B, 0x0, 0xF457, 0x0, "[]"),
    MILKY_WAY(0x1F30C, 0x0, 0xF463, 0x0, "[]"),
    EARTH_GLOBE_ASIA_AUSTRALIA(0x1F30F, 0x0, 0xF7D0, 0x0, "[]"),
    NEW_MOON_SYMBOL(0x1F311, 0xF940, 0xF7C5, 0x0, "[]"),
    FIRST_QUARTER_MOON_SYMBOL(0x1F313, 0xF942, 0xF7C7, 0x0, "[]"),
    WAXING_GIBBOUS_MOON_SYMBOL(0x1F314, 0xF941, 0xF7C6, 0x0, "[]"),
    FULL_MOON_SYMBOL(0x1F315, 0xF944, 0x0, 0x0, "[]"),
    CRESCENT_MOON(0x1F319, 0xF943, 0xF65E, 0xF98D),
    FIRST_QUARTER_MOON_WITH_FACE(0x1F31B, 0x0, 0xF661, 0x0, "[]"),
    GLOWING_STAR(0x1F31F, 0x0, 0x0, 0xF9D5, "[]"),
    SHOOTING_STAR(0x1F320, 0x0, 0xF640, 0x0, "[]"),
    CHESTNUT(0x1F330, 0x0, 0xF3F9, 0x0, "[]"),
    SEEDLING(0x1F331, 0xF9EB, 0xF482, 0x0, "[]"),
    PALM_TREE(0x1F334, 0x0, 0xF6BB, 0xF9A7, "[]"),
    CACTUS(0x1F335, 0x0, 0xF369, 0xF9A8, "[]"),
    TULIP(0x1F337, 0xF9E8, 0xF6BD, 0xF9A4),
    CHERRY_BLOSSOM(0x1F338, 0xF9ED, 0xF6A3, 0xF970),
    ROSE(0x1F339, 0x0, 0xF7EA, 0xF972, "[]"),
    HIBISCUS(0x1F33A, 0x0, 0xF367, 0xF9A3, "[]"),
    SUNFLOWER(0x1F33B, 0x0, 0xF6BC, 0xF9A5, "[]"),
    BLOSSOM(0x1F33C, 0x0, 0xF44D, 0x0, "[]"),
    EAR_OF_MAIZE(0x1F33D, 0x0, 0xF3F7, 0x0, "[]"),
    EAR_OF_RICE(0x1F33E, 0x0, 0x0, 0xFB85, "[]"),
    HERB(0x1F33F, 0x0, 0xF487, 0x0, "[]"),
    FOUR_LEAF_CLOVER(0x1F340, 0xF9E6, 0xF6EC, 0xF750),
    MAPLE_LEAF(0x1F341, 0xF9EC, 0xF6A7, 0xF758),
    FALLEN_LEAF(0x1F342, 0x0, 0xF340, 0xF759, "[]"),
    LEAF_FLUTTERING_IN_WIND(0x1F343, 0x0, 0x0, 0xFB88, "[]"),
    MUSHROOM(0x1F344, 0x0, 0xF3F8, 0x0, "[]"),
    TOMATO(0x1F345, 0x0, 0xF38F, 0xF9E9, "[]"),
    AUBERGINE(0x1F346, 0x0, 0xF390, 0xF9EA, "[]"),
    GRAPES(0x1F347, 0x0, 0xF3F5, 0x0, "[]"),
    MELON(0x1F348, 0x0, 0xF3F3, 0x0, "[]"),
    WATERMELON(0x1F349, 0x0, 0xF6A6, 0xF9E8, "[]"),
    TANGERINE(0x1F34A, 0x0, 0xF38E, 0xF9E6, "[]"),
    BANANA(0x1F34C, 0xF9E9, 0xF3F6, 0x0, "[]"),
    PINEAPPLE(0x1F34D, 0x0, 0xF3F4, 0x0, "[]"),
    RED_APPLE(0x1F34E, 0xF9EA, 0xF38D, 0xF9E5),
    GREEN_APPLE(0x1F34F, 0x0, 0xF45E, 0x0, "[]"),
    PEACH(0x1F351, 0x0, 0xF3FA, 0x0, "[]"),
    CHERRIES(0x1F352, 0xF9E7, 0xF6AB, 0x0, "[]"),
    STRAWBERRY(0x1F353, 0x0, 0xF6AD, 0xF9E7, "[]"),
    HAMBURGER(0x1F354, 0xF8D4, 0xF6AF, 0xF760),
    SLICE_OF_PIZZA(0x1F355, 0x0, 0xF3FC, 0x0, "[]"),
    MEAT_ON_BONE(0x1F356, 0x0, 0xF69D, 0x0, "[]"),
    POULTRY_LEG(0x1F357, 0x0, 0xF440, 0x0, "[]"),
    RICE_CRACKER(0x1F358, 0x0, 0xF387, 0xF9DD, "[]"),
    RICE_BALL(0x1F359, 0xF9EE, 0xF6AE, 0xF9E2),
    COOKED_RICE(0x1F35A, 0x0, 0xF388, 0xF9DE, "[]"),
    CURRY_AND_RICE(0x1F35B, 0x0, 0xF38A, 0xF9E1, "[]"),
    STEAMING_BOWL(0x1F35C, 0xF9F1, 0xF7D1, 0xF9E0),
    SPAGHETTI(0x1F35D, 0x0, 0xF389, 0xF9DF, "[]"),
    BREAD(0x1F35E, 0xF9F2, 0xF383, 0xF9D9),
    FRENCH_FRIES(0x1F35F, 0x0, 0xF385, 0xF9DB, "[]"),
    ROASTED_SWEET_POTATO(0x1F360, 0x0, 0xF3FB, 0x0, "[]"),
    DANGO(0x1F361, 0x0, 0xF386, 0xF9DC, "[]"),
    ODEN(0x1F362, 0x0, 0xF38B, 0xF9E3, "[]"),
    SUSHI(0x1F363, 0x0, 0xF38C, 0xF9E4, "[]"),
    FRIED_SHRIMP(0x1F364, 0x0, 0xF474, 0x0, "[]"),
    FISH_CAKE_WITH_SWIRL_DESIGN(0x1F365, 0x0, 0xF6C6, 0x0, "[]"),
    SOFT_ICE_CREAM(0x1F366, 0x0, 0xF384, 0xF9DA, "[]"),
    SHAVED_ICE(0x1F367, 0x0, 0xF3BE, 0xFB80, "[]"),
    ICE_CREAM(0x1F368, 0x0, 0xF44E, 0x0, "[]"),
    DOUGHNUT(0x1F369, 0x0, 0xF44F, 0x0, "[]"),
    COOKIE(0x1F36A, 0x0, 0xF450, 0x0, "[]"),
    CHOCOLATE_BAR(0x1F36B, 0x0, 0xF451, 0x0, "[]"),
    CANDY(0x1F36C, 0x0, 0xF452, 0x0, "[]"),
    LOLLIPOP(0x1F36D, 0x0, 0xF453, 0x0, "[]"),
    CUSTARD(0x1F36E, 0x0, 0xF45A, 0x0, "[]"),
    HONEY_POT(0x1F36F, 0x0, 0xF45D, 0x0, "[]"),
    SHORTCAKE(0x1F370, 0xF9EF, 0xF6A9, 0xF987),
    BENTO_BOX(0x1F371, 0x0, 0xF391, 0xF9EC, "[]"),
    POT_OF_FOOD(0x1F372, 0x0, 0xF392, 0xF9ED, "[]"),
    COOKING(0x1F373, 0x0, 0xF6AA, 0xF788, "[]"),
    FORK_AND_KNIFE(0x1F374, 0xF8D0, 0xF685, 0xF984),
    TEACUP_WITHOUT_HANDLE(0x1F375, 0xF9C3, 0xF382, 0xF9D8),
    SAKE_BOTTLE_AND_CUP(0x1F376, 0xF9F0, 0xF36A, 0xF9AB),
    WINE_GLASS(0x1F377, 0xF9FB, 0xF69A, 0x0, "[]"),
    COCKTAIL_GLASS(0x1F378, 0xF8D2, 0xF69B, 0xF985),
    TROPICAL_DRINK(0x1F379, 0x0, 0xF442, 0x0, "[]"),
    BEER_MUG(0x1F37A, 0xF8D3, 0xF69C, 0xF988),
    CLINKING_BEER_MUGS(0x1F37B, 0x0, 0xF36B, 0xF9AC, "[]"),
    RIBBON(0x1F380, 0xF8E5, 0xF7BC, 0xF9B4),
    WRAPPED_PRESENT(0x1F381, 0xF8E6, 0xF6A8, 0xF752),
    BIRTHDAY_CAKE(0x1F382, 0xF8E7, 0xF7BD, 0xF9EB),
    JACK_O_LANTERN(0x1F383, 0x0, 0xF3C2, 0xFB86, "[]"),
    CHRISTMAS_TREE(0x1F384, 0xF948, 0xF6A2, 0xF973),
    FATHER_CHRISTMAS(0x1F385, 0x0, 0xF3C4, 0xFB89, "[]"),
    FIREWORKS(0x1F386, 0x0, 0xF7FC, 0xF757, "[]"),
    FIREWORK_SPARKLER(0x1F387, 0x0, 0xF3BF, 0xFB81, "[]"),
    BALLOON(0x1F388, 0x0, 0xF36E, 0xF9B0, "[]"),
    PARTY_POPPER(0x1F389, 0x0, 0xF36F, 0xF9B2, "[]"),
    CONFETTI_BALL(0x1F38A, 0x0, 0xF647, 0x0, "[]"),
    TANABATA_TREE(0x1F38B, 0x0, 0xF441, 0x0, "[]"),
    CROSSED_FLAGS(0x1F38C, 0x0, 0xF34C, 0xF784, "[]"),
    PINE_DECORATION(0x1F38D, 0x0, 0xF3B7, 0xFB76, "[]"),
    JAPANESE_DOLLS(0x1F38E, 0x0, 0xF3B8, 0xFB78, "[]"),
    CARP_STREAMER(0x1F38F, 0x0, 0xF3BB, 0xFB7B, "[]"),
    WIND_CHIME(0x1F390, 0x0, 0xF3C1, 0xFB83, "[]"),
    MOON_VIEWING_CEREMONY(0x1F391, 0x0, 0xF3C3, 0xFB87, "[]"),
    SCHOOL_SATCHEL(0x1F392, 0x0, 0xF3BA, 0xFB7A, "[]"),
    GRADUATION_CAP(0x1F393, 0x0, 0xF3B9, 0xFB79, "[]"),
    CAROUSEL_HORSE(0x1F3A0, 0xF8DA, 0x0, 0x0, "[]"),
    FERRIS_WHEEL(0x1F3A1, 0x0, 0xF645, 0xF764, "[]"),
    ROLLER_COASTER(0x1F3A2, 0x0, 0xF3B6, 0xFB73, "[]"),
    FISHING_POLE_AND_FISH(0x1F3A3, 0x0, 0xF446, 0x0, "[]"),
    MICROPHONE(0x1F3A4, 0xF8D7, 0xF6DC, 0xF97C),
    MOVIE_CAMERA(0x1F3A5, 0xF8D8, 0xF6F0, 0xF97D),
    CINEMA(0x1F3A6, 0x0, 0x0, 0xFBA7, "[]"),
    HEADPHONE(0x1F3A7, 0xF8DB, 0xF6E1, 0xF9AA),
    ARTIST_PALETTE(0x1F3A8, 0xF8DC, 0xF7B9, 0xFBA2),
    TOP_HAT(0x1F3A9, 0xF8DD, 0xF3C9, 0xFBA3),
    CIRCUS_TENT(0x1F3AA, 0xF8DE, 0xF7BB, 0x0, "[]"),
    TICKET(0x1F3AB, 0xF8DF, 0xF676, 0xF765),
    CLAPPER_BOARD(0x1F3AC, 0xF950, 0xF697, 0xF9C4),
    PERFORMING_ARTS(0x1F3AD, 0x0, 0xF7BA, 0x0, "[]"),
    VIDEO_GAME(0x1F3AE, 0xF8EC, 0xF69F, 0x0, "[]"),
    DIRECT_HIT(0x1F3AF, 0x0, 0xF69E, 0xF770, "[]"),
    SLOT_MACHINE(0x1F3B0, 0x0, 0xF646, 0xF773, "[]"),
    BILLIARDS(0x1F3B1, 0x0, 0xF3B1, 0xFB6C, "[]"),
    GAME_DIE(0x1F3B2, 0x0, 0xF6A1, 0x0, "[]"),
    BOWLING(0x1F3B3, 0x0, 0xF447, 0x0, "[]"),
    FLOWER_PLAYING_CARDS(0x1F3B4, 0x0, 0xF472, 0x0, "[]"),
    MUSICAL_NOTE(0x1F3B5, 0xF99B, 0xF7EE, 0xF97E),
    MULTIPLE_MUSICAL_NOTES(0x1F3B6, 0xF9A4, 0xF6DE, 0xF9C6),
    SAXOPHONE(0x1F3B7, 0x0, 0x0, 0xF981, "[]"),
    GUITAR(0x1F3B8, 0x0, 0xF6DF, 0xF982, "[]"),
    MUSICAL_KEYBOARD(0x1F3B9, 0x0, 0xF444, 0x0, "[]"),
    TRUMPET(0x1F3BA, 0x0, 0xF3B0, 0xF983, "[]"),
    VIOLIN(0x1F3BB, 0x0, 0xF6E0, 0x0, "[]"),
    MUSICAL_SCORE(0x1F3BC, 0x0, 0xF3A0, 0x0, "[]"),
    RUNNING_SHIRT_WITH_SASH(0x1F3BD, 0xF8B3, 0x0, 0x0, "[]"),
    TENNIS_RACQUET_AND_BALL(0x1F3BE, 0xF8B6, 0xF690, 0xF955),
    SKI_AND_SKI_BOOT(0x1F3BF, 0xF8B8, 0xF380, 0xF953),
    BASKETBALL_AND_HOOP(0x1F3C0, 0xF8B9, 0xF7B7, 0xFB6A),
    CHEQUERED_FLAG(0x1F3C1, 0xF8BA, 0xF692, 0xF772),
    SNOWBOARDER(0x1F3C2, 0xF9B7, 0xF691, 0x0, "[]"),
    RUNNER(0x1F3C3, 0xF9D8, 0xF643, 0xF755),
    SURFER(0x1F3C4, 0x0, 0xF445, 0xF957, "[]"),
    TROPHY(0x1F3C6, 0x0, 0xF346, 0xF771, "[]"),
    AMERICAN_FOOTBALL(0x1F3C8, 0x0, 0xF694, 0xFB6B, "[]"),
    SWIMMER(0x1F3CA, 0x0, 0xF3B2, 0xFB6D, "[]"),
    HOUSE_BUILDING(0x1F3E0, 0xF8C4, 0xF684, 0xF976),
    HOUSE_WITH_GARDEN(0x1F3E1, 0x0, 0xF7E0, 0x0, "[]"),
    OFFICE_BUILDING(0x1F3E2, 0xF8C5, 0xF686, 0xF978),
    JAPANESE_POST_OFFICE(0x1F3E3, 0xF8C6, 0xF351, 0xF794),
    HOSPITAL(0x1F3E5, 0xF8C7, 0xF352, 0xF796),
    BANK(0x1F3E6, 0xF8C8, 0xF683, 0xF78E),
    AUTOMATED_TELLER_MACHINE(0x1F3E7, 0xF8C9, 0xF67B, 0xF795),
    HOTEL(0x1F3E8, 0xF8CA, 0xF354, 0xF799),
    LOVE_HOTEL(0x1F3E9, 0x0, 0xF3C7, 0xFBA1, "[]"),
    CONVENIENCE_STORE(0x1F3EA, 0xF8CB, 0xF67C, 0xF797),
    SCHOOL(0x1F3EB, 0xF9E3, 0xF353, 0xF798),
    DEPARTMENT_STORE(0x1F3EC, 0x0, 0xF3CA, 0xFBA4, "[]"),
    FACTORY(0x1F3ED, 0x0, 0xF3CD, 0xFBA8, "[]"),
    IZAKAYA_LANTERN(0x1F3EE, 0x0, 0xF696, 0x0, "[]"),
    JAPANESE_CASTLE(0x1F3EF, 0x0, 0xF3CB, 0xFBA5, "[]"),
    EUROPEAN_CASTLE(0x1F3F0, 0x0, 0xF3CC, 0xFBA6, "[]"),
    SNAIL(0x1F40C, 0xF9F3, 0xF483, 0x0, "[]"),
    SNAKE(0x1F40D, 0x0, 0xF3E3, 0xFBCD, "[]"),
    HORSE(0x1F40E, 0x0, 0x0, 0xF774, "[]"),
    SHEEP(0x1F411, 0x0, 0x0, 0xFBC9, "[]"),
    MONKEY(0x1F412, 0x0, 0x0, 0xFBC8, "[]"),
    CHICKEN(0x1F414, 0x0, 0xF3E4, 0xFBCE, "[]"),
    BOAR(0x1F417, 0x0, 0xF3E5, 0xFBCF, "[]"),
    ELEPHANT(0x1F418, 0x0, 0xF3E0, 0xFBC6, "[]"),
    OCTOPUS(0x1F419, 0x0, 0xF7F7, 0xF74A, "[]"),
    SPIRAL_SHELL(0x1F41A, 0x0, 0xF3C0, 0xFB82, "[]"),
    BUG(0x1F41B, 0x0, 0xF3DF, 0xFBC5, "[]"),
    ANT(0x1F41C, 0x0, 0xF6B6, 0x0, "[]"),
    HONEYBEE(0x1F41D, 0x0, 0xF45B, 0x0, "[]"),
    LADY_BEETLE(0x1F41E, 0x0, 0xF45C, 0x0, "[]"),
    FISH(0x1F41F, 0xF9F6, 0x0, 0xF959, "[]"),
    TROPICAL_FISH(0x1F420, 0x0, 0xF3DE, 0xFBC2, "[]"),
    BLOWFISH(0x1F421, 0x0, 0xF6AC, 0x0, "[]"),
    TURTLE(0x1F422, 0x0, 0xF347, 0x0, "[]"),
    HATCHING_CHICK(0x1F423, 0x0, 0xF34E, 0x0, "[]"),
    BABY_CHICK(0x1F424, 0xF9F4, 0xF6B9, 0xFBC3),
    FRONT_FACING_BABY_CHICK(0x1F425, 0x0, 0xF47A, 0x0, "[]"),
    BIRD(0x1F426, 0x0, 0x0, 0xFBC1, "[]"),
    PENGUIN(0x1F427, 0xF9F5, 0xF6B5, 0xF996),
    KOALA(0x1F428, 0x0, 0xF3E1, 0xFBC7, "[]"),
    POODLE(0x1F429, 0x0, 0xF6B8, 0x0, "[]"),
    BACTRIAN_CAMEL(0x1F42B, 0x0, 0xF3E6, 0xFBD0, "[]"),
    DOLPHIN(0x1F42C, 0x0, 0xF3DC, 0xFBC0, "[]"),
    MOUSE_FACE(0x1F42D, 0x0, 0xF7F2, 0xF994, "[]"),
    COW_FACE(0x1F42E, 0x0, 0xF3E2, 0xFBCB, "[]"),
    TIGER_FACE(0x1F42F, 0x0, 0xF7F0, 0xF991, "[]"),
    RABBIT_FACE(0x1F430, 0x0, 0xF6B0, 0xFBCC, "[]"),
    CAT_FACE(0x1F431, 0xF946, 0xF6B4, 0xF990),
    DRAGON_FACE(0x1F432, 0x0, 0xF443, 0x0, "[]"),
    SPOUTING_WHALE(0x1F433, 0x0, 0xF648, 0xF995, "[]"),
    HORSE_FACE(0x1F434, 0xF9F9, 0xF6B1, 0xF95A),
    MONKEY_FACE(0x1F435, 0x0, 0xF6B2, 0xF749, "[]"),
    DOG_FACE(0x1F436, 0xF945, 0xF6BA, 0xF993),
    PIG_FACE(0x1F437, 0xF9FA, 0xF6B7, 0xF74B),
    FROG_FACE(0x1F438, 0x0, 0xF6B3, 0xFBD1, "[]"),
    HAMSTER_FACE(0x1F439, 0x0, 0x0, 0xFBC4, "[]"),
    WOLF_FACE(0x1F43A, 0x0, 0x0, 0xFBCA, "[]"),
    BEAR_FACE(0x1F43B, 0x0, 0xF7F1, 0xF992, "[]"),
    PANDA_FACE(0x1F43C, 0x0, 0xF44A, 0x0, "[]"),
    PIG_NOSE(0x1F43D, 0x0, 0xF44C, 0x0, "[]"),
    PAW_PRINTS(0x1F43E, 0x0, 0xF6C7, 0x0, "[]"),
    EYES(0x1F440, 0xF8F2, 0xF7C1, 0xFB59),
    EAR(0x1F442, 0xF8F3, 0xF7C2, 0xFB5B),
    NOSE(0x1F443, 0x0, 0xF3A4, 0xFB5A, "[]"),
    MOUTH(0x1F444, 0x0, 0xF3A5, 0xFB5C, "[]"),
    TONGUE(0x1F445, 0x0, 0xF44B, 0x0, "[]"),
    WHITE_UP_POINTING_BACKHAND_INDEX(0x1F446, 0x0, 0xF360, 0xF7CE, "[]"),
    WHITE_DOWN_POINTING_BACKHAND_INDEX(0x1F447, 0x0, 0xF361, 0xF7CF, "[]"),
    WHITE_LEFT_POINTING_BACKHAND_INDEX(0x1F448, 0x0, 0xF6D8, 0xF7D0, "[]"),
    WHITE_RIGHT_POINTING_BACKHAND_INDEX(0x1F449, 0x0, 0xF6D9, 0xF7D1, "[]"),
    FISTED_HAND_SIGN(0x1F44A, 0xF9A2, 0xF6CC, 0xF94D),
    WAVING_HAND_SIGN(0x1F44B, 0x0, 0xF3AA, 0xFB5E, "[]"),
    OK_HAND_SIGN(0x1F44C, 0x0, 0xF3A8, 0xFB60, "[]"),
    THUMBS_UP_SIGN(0x1F44D, 0xF9CC, 0xF6D2, 0xF94E),
    THUMBS_DOWN_SIGN(0x1F44E, 0x0, 0xF3A9, 0xFB61, "[]"),
    CLAPPING_HANDS_SIGN(0x1F44F, 0x0, 0xF3A7, 0xFB5F, "[]"),
    OPEN_HANDS_SIGN(0x1F450, 0x0, 0x0, 0xFB62, "[]"),
    CROWN(0x1F451, 0xF9BF, 0xF7F9, 0xF74E),
    WOMANS_HAT(0x1F452, 0x0, 0xF371, 0xF9B8, "[]"),
    EYEGLASSES(0x1F453, 0xF8FB, 0xF6D7, 0x0, "[]"),
    NECKTIE(0x1F454, 0x0, 0xF366, 0xF9A2, "[]"),
    T_SHIRT(0x1F455, 0xF9B3, 0xF7E6, 0xF946),
    JEANS(0x1F456, 0xF9B6, 0xF47B, 0x0, "[]"),
    DRESS(0x1F457, 0x0, 0xF46F, 0xF9B9, "[]"),
    KIMONO(0x1F458, 0x0, 0xF376, 0xF9C1, "[]"),
    BIKINI(0x1F459, 0x0, 0xF377, 0xF9C2, "[]"),
    WOMANS_CLOTHES(0x1F45A, 0x0, 0xF6E6, 0x0, "[]"),
    PURSE(0x1F45B, 0xF9B4, 0xF6DD, 0x0, "[]"),
    HANDBAG(0x1F45C, 0xF8E3, 0xF674, 0xF9C3),
    POUCH(0x1F45D, 0xF951, 0x0, 0x0, "[]"),
    MANS_SHOE(0x1F45E, 0x0, 0xF7E7, 0x0, "[]"),
    ATHLETIC_SHOE(0x1F45F, 0xF8FA, 0xF3EC, 0xF947),
    HIGH_HEELED_SHOE(0x1F460, 0xF8D5, 0xF6F3, 0xF77E),
    WOMANS_SANDAL(0x1F461, 0x0, 0x0, 0xF9BA, "[]"),
    WOMANS_BOOTS(0x1F462, 0x0, 0xF372, 0xF9BB, "[]"),
    FOOTPRINTS(0x1F463, 0xF8F9, 0xF3EB, 0xFBD6),
    BUST_IN_SILHOUETTE(0x1F464, 0xF955, 0x0, 0x0, "[]"),
    BOY(0x1F466, 0x0, 0x0, 0xF941, "[]"),
    GIRL(0x1F467, 0x0, 0x0, 0xF942, "[]"),
    MAN(0x1F468, 0x0, 0xF6D5, 0xF944, "[]"),
    WOMAN(0x1F469, 0x0, 0xF6D3, 0xF945, "[]"),
    FAMILY(0x1F46A, 0x0, 0xF6DA, 0x0, "[]"),
    MAN_AND_WOMAN_HOLDING_HANDS(0x1F46B, 0x0, 0x0, 0xFB68, "[]"),
    POLICE_OFFICER(0x1F46E, 0x0, 0xF350, 0xF793, "[]"),
    WOMAN_WITH_BUNNY_EARS(0x1F46F, 0x0, 0xF3AF, 0xFB69, "[]"),
    BRIDE_WITH_VEIL(0x1F470, 0x0, 0xF3BD, 0x0, "[]"),
    PERSON_WITH_BLOND_HAIR(0x1F471, 0x0, 0xF3D4, 0xFBB5, "[]"),
    MAN_WITH_GUA_PI_MAO(0x1F472, 0x0, 0xF3D5, 0xFBB6, "[]"),
    MAN_WITH_TURBAN(0x1F473, 0x0, 0xF3D6, 0xFBB7, "[]"),
    OLDER_MAN(0x1F474, 0x0, 0xF3D7, 0xFBB8, "[]"),
    OLDER_WOMAN(0x1F475, 0x0, 0xF3D8, 0xFBB9, "[]"),
    BABY(0x1F476, 0x0, 0xF3D9, 0xFBBA, "[]"),
    CONSTRUCTION_WORKER(0x1F477, 0x0, 0xF3DA, 0xFBBB, "[]"),
    PRINCESS(0x1F478, 0x0, 0xF3DB, 0xFBBC, "[]"),
    JAPANESE_OGRE(0x1F479, 0x0, 0xF448, 0x0, "[]"),
    JAPANESE_GOBLIN(0x1F47A, 0x0, 0xF449, 0x0, "[]"),
    GHOST(0x1F47B, 0x0, 0xF6A4, 0xF75B, "[]"),
    BABY_ANGEL(0x1F47C, 0x0, 0xF7EF, 0xF98F, "[]"),
    EXTRATERRESTRIAL_ALIEN(0x1F47D, 0x0, 0xF6E7, 0xF74C, "[]"),
    ALIEN_MONSTER(0x1F47E, 0x0, 0xF6C5, 0xF76B, "[]"),
    IMP(0x1F47F, 0x0, 0xF6C8, 0xF75A, "[]"),
    SKULL(0x1F480, 0x0, 0xF6D1, 0xF75C, "[]"),
    INFORMATION_DESK_PERSON(0x1F481, 0x0, 0x0, 0xF7F3, "[]"),
    GUARDSMAN(0x1F482, 0x0, 0x0, 0xFBBE, "[]"),
    DANCER(0x1F483, 0x0, 0xF3DD, 0xFBBF, "[]"),
    LIPSTICK(0x1F484, 0xF9B5, 0xF6E2, 0xF9BC),
    NAIL_POLISH(0x1F485, 0x0, 0xF373, 0xF9BD, "[]"),
    FACE_MASSAGE(0x1F486, 0x0, 0xF6E4, 0xF9BE, "[]"),
    HAIRCUT(0x1F487, 0x0, 0xF374, 0xF9BF, "[]"),
    BARBER_POLE(0x1F488, 0x0, 0xF375, 0xF9C0, "[]"),
    SYRINGE(0x1F489, 0x0, 0xF6E9, 0xF77B, "[]"),
    PILL(0x1F48A, 0x0, 0xF36D, 0xF9AF, "[]"),
    KISS_MARK(0x1F48B, 0xF99E, 0xF6C4, 0xF943),
    LOVE_LETTER(0x1F48C, 0xF9BC, 0xF47C, 0x0, "[]"),
    RING(0x1F48D, 0xF9C0, 0xF6ED, 0xF974),
    GEM_STONE(0x1F48E, 0x0, 0x0, 0xF975, "[]"),
    KISS(0x1F48F, 0x0, 0xF7FA, 0xF751, "[]"),
    BOUQUET(0x1F490, 0x0, 0xF368, 0xF9A6, "[]"),
    COUPLE_WITH_HEART(0x1F491, 0x0, 0xF3AE, 0xFB65, "[]"),
    WEDDING(0x1F492, 0x0, 0x0, 0xFB7D, "[]"),
    BEATING_HEART(0x1F493, 0xF992, 0xF479, 0xF9C7),
    BROKEN_HEART(0x1F494, 0xF993, 0xF64F, 0xF963),
    TWO_HEARTS(0x1F495, 0xF994, 0xF650, 0x0, "[]"),
    SPARKLING_HEART(0x1F496, 0x0, 0xF379, 0x0, "[]"),
    GROWING_HEART(0x1F497, 0x0, 0x0, 0xF9C8, "[]"),
    HEART_WITH_ARROW(0x1F498, 0x0, 0xF6C3, 0xF9C9, "[]"),
    BLUE_HEART(0x1F499, 0x0, 0xF37A, 0xF9CA, "[]"),
    GREEN_HEART(0x1F49A, 0x0, 0xF37B, 0xF9CB, "[]"),
    YELLOW_HEART(0x1F49B, 0x0, 0xF37C, 0xF9CC, "[]"),
    PURPLE_HEART(0x1F49C, 0x0, 0xF37D, 0xF9CD, "[]"),
    HEART_WITH_RIBBON(0x1F49D, 0x0, 0xF458, 0xFB77, "[]"),
    REVOLVING_HEARTS(0x1F49E, 0x0, 0xF7CC, 0x0, "[]"),
    HEART_DECORATION(0x1F49F, 0x0, 0x0, 0xF7A4, "[]"),
    DIAMOND_SHAPE_WITH_A_DOT_INSIDE(0x1F4A0, 0xF99D, 0x0, 0x0, "[]"),
    ELECTRIC_LIGHT_BULB(0x1F4A1, 0xF9A0, 0xF64E, 0xF74F),
    ANGER_SYMBOL(0x1F4A2, 0xF9A1, 0xF6BE, 0xF9D4),
    BOMB(0x1F4A3, 0xF9A3, 0xF652, 0xF9B1),
    SLEEPING_SYMBOL(0x1F4A4, 0xF9A6, 0xF64D, 0xF77C),
    COLLISION_SYMBOL(0x1F4A5, 0xF9AA, 0xF7CD, 0x0, "[]"),
    SPLASHING_SWEAT_SYMBOL(0x1F4A6, 0xF9AB, 0xF7CE, 0xF9D1),
    DROPLET(0x1F4A7, 0xF9AC, 0xF6BF, 0x0, "[]"),
    DASH_SYMBOL(0x1F4A8, 0xF9AD, 0xF6CD, 0xF9D0),
    PILE_OF_POO(0x1F4A9, 0x0, 0xF6CE, 0xF99B, "[]"),
    FLEXED_BICEPS(0x1F4AA, 0x0, 0xF6C2, 0xF78D, "[]"),
    DIZZY_SYMBOL(0x1F4AB, 0x0, 0xF460, 0x0, "[]"),
    SPEECH_BALLOON(0x1F4AC, 0x0, 0xF6D6, 0x0, "[]"),
    WHITE_FLOWER(0x1F4AE, 0x0, 0xF6C9, 0x0, "[]"),
    HUNDRED_POINTS_SYMBOL(0x1F4AF, 0x0, 0xF6CB, 0x0, "[]"),
    MONEY_BAG(0x1F4B0, 0xF9BA, 0xF6A0, 0xF76F),
    CURRENCY_EXCHANGE(0x1F4B1, 0x0, 0x0, 0xF78A, "[]"),
    HEAVY_DOLLAR_SIGN(0x1F4B2, 0x0, 0xF796, 0x0, "[]"),
    CREDIT_CARD(0x1F4B3, 0x0, 0xF799, 0x0, "[]"),
    BANKNOTE_WITH_YEN_SIGN(0x1F4B4, 0xF97A, 0xF79A, 0x0, "[]"),
    BANKNOTE_WITH_DOLLAR_SIGN(0x1F4B5, 0x0, 0xF7A2, 0x0, "[]"),
    MONEY_WITH_WINGS(0x1F4B8, 0x0, 0xF45F, 0x0, "[]"),
    CHART_WITH_UPWARDS_TREND_AND_YEN_SIGN(0x1F4B9, 0x0, 0xF34F, 0xF78B, "[]"),
    SEAT(0x1F4BA, 0xF956, 0x0, 0xF75F, "[]"),
    PERSONAL_COMPUTER(0x1F4BB, 0xF9BB, 0xF7E8, 0xF94C),
    BRIEFCASE(0x1F4BC, 0x0, 0xF341, 0xF75E, "[]"),
    MINIDISC(0x1F4BD, 0x0, 0xF79F, 0xF9B6, "[]"),
    FLOPPY_DISK(0x1F4BE, 0x0, 0xF77E, 0x0, "[]"),
    OPTICAL_DISC(0x1F4BF, 0xF8ED, 0xF6E5, 0xF766),
    DVD(0x1F4C0, 0x0, 0x0, 0xF767, "[]"),
    FILE_FOLDER(0x1F4C1, 0x0, 0xF7AC, 0x0, "[]"),
    OPEN_FILE_FOLDER(0x1F4C2, 0x0, 0xF7AD, 0x0, "[]"),
    PAGE_WITH_CURL(0x1F4C3, 0x0, 0xF77D, 0x0, "[]"),
    PAGE_FACING_UP(0x1F4C4, 0x0, 0xF786, 0x0, "[]"),
    CALENDAR(0x1F4C5, 0x0, 0xF780, 0x0, "[]"),
    TEAR_OFF_CALENDAR(0x1F4C6, 0x0, 0xF787, 0x0, "[]"),
    CARD_INDEX(0x1F4C7, 0x0, 0xF789, 0x0, "[]"),
    CHART_WITH_UPWARDS_TREND(0x1F4C8, 0x0, 0xF792, 0x0, "[]"),
    CHART_WITH_DOWNWARDS_TREND(0x1F4C9, 0x0, 0xF793, 0x0, "[]"),
    BAR_CHART(0x1F4CA, 0x0, 0xF791, 0x0, "[]"),
    CLIPBOARD(0x1F4CB, 0x0, 0xF781, 0x0, "[]"),
    PUSHPIN(0x1F4CC, 0x0, 0xF78A, 0x0, "[]"),
    ROUND_PUSHPIN(0x1F4CD, 0x0, 0xF77C, 0x0, "[]"),
    PAPERCLIP(0x1F4CE, 0xF9D5, 0xF678, 0x0, "[]"),
    STRAIGHT_RULER(0x1F4CF, 0x0, 0xF78D, 0x0, "[]"),
    TRIANGULAR_RULER(0x1F4D0, 0x0, 0xF67A, 0x0, "[]"),
    BOOKMARK_TABS(0x1F4D1, 0x0, 0xF7E2, 0x0, "[]"),
    LEDGER(0x1F4D2, 0x0, 0xF78B, 0x0, "[]"),
    NOTEBOOK(0x1F4D3, 0x0, 0xF788, 0x0, "[]"),
    NOTEBOOK_WITH_DECORATIVE_COVER(0x1F4D4, 0x0, 0xF675, 0x0, "[]"),
    CLOSED_BOOK(0x1F4D5, 0x0, 0xF785, 0x0, "[]"),
    OPEN_BOOK(0x1F4D6, 0xF8E4, 0xF677, 0xF789),
    GREEN_BOOK(0x1F4D7, 0x0, 0xF782, 0x0, "[]"),
    BLUE_BOOK(0x1F4D8, 0x0, 0xF783, 0x0, "[]"),
    ORANGE_BOOK(0x1F4D9, 0x0, 0xF784, 0x0, "[]"),
    BOOKS(0x1F4DA, 0x0, 0xF78C, 0x0, "[]"),
    NAME_BADGE(0x1F4DB, 0x0, 0xF6F6, 0x0, "[]"),
    SCROLL(0x1F4DC, 0x0, 0xF77B, 0x0, "[]"),
    MEMO(0x1F4DD, 0xF8EA, 0xF365, 0xF9A1),
    TELEPHONE_RECEIVER(0x1F4DE, 0x0, 0xF6F7, 0x0, "[]"),
    PAGER(0x1F4DF, 0xF8BB, 0xF7B8, 0x0, "[]"),
    FAX_MACHINE(0x1F4E0, 0xF974, 0xF6F9, 0xF94B),
    SATELLITE_ANTENNA(0x1F4E1, 0x0, 0xF681, 0xF78C, "[]"),
    PUBLIC_ADDRESS_LOUDSPEAKER(0x1F4E2, 0x0, 0x0, 0xF783, "[]"),
    CHEERING_MEGAPHONE(0x1F4E3, 0x0, 0x0, 0xF9B7, "[]"),
    OUTBOX_TRAY(0x1F4E4, 0x0, 0xF7AF, 0x0, "[]"),
    INBOX_TRAY(0x1F4E5, 0x0, 0xF7B0, 0x0, "[]"),
    PACKAGE(0x1F4E6, 0x0, 0xF6F8, 0x0, "[]"),
    E_MAIL_SYMBOL(0x1F4E7, 0x0, 0xF475, 0x0, "[]"),
    INCOMING_ENVELOPE(0x1F4E8, 0x0, 0xF7AE, 0x0, "[]"),
    ENVELOPE_WITH_DOWNWARDS_ARROW_ABOVE(0x1F4E9, 0xF973, 0xF466, 0xF743),
    CLOSED_MAILBOX_WITH_LOWERED_FLAG(0x1F4EA, 0x0, 0xF6F4, 0x0, "[]"),
    CLOSED_MAILBOX_WITH_RAISED_FLAG(0x1F4EB, 0x0, 0xF7E1, 0xF741, "[]"),
    POSTBOX(0x1F4EE, 0x0, 0x0, 0xF742, "[]"),
    NEWSPAPER(0x1F4F0, 0x0, 0xF7A8, 0x0, "[]"),
    MOBILE_PHONE(0x1F4F1, 0xF8E9, 0xF7A5, 0xF94A),
    MOBILE_PHONE_WITH_RIGHTWARDS_ARROW_AT_LEFT(0x1F4F2, 0xF972, 0xF7DF, 0xF744),
    VIBRATION_MODE(0x1F4F3, 0x0, 0xF363, 0xF7F0, "[]"),
    MOBILE_PHONE_OFF(0x1F4F4, 0x0, 0xF364, 0xF7F1, "[]"),
    ANTENNA_WITH_BARS(0x1F4F6, 0x0, 0xF357, 0xF7AB, "[]"),
    CAMERA(0x1F4F7, 0xF8E2, 0xF6EE, 0xF948),
    VIDEO_CAMERA(0x1F4F9, 0x0, 0xF79B, 0x0, "[]"),
    TELEVISION(0x1F4FA, 0xF8EB, 0xF6DB, 0xF76A),
    RADIO(0x1F4FB, 0x0, 0xF7E9, 0xF768, "[]"),
    VIDEOCASSETTE(0x1F4FC, 0x0, 0xF79D, 0xF769, "[]"),
    CLOCKWISE_DOWNWARDS_AND_UPWARDS_OPEN_CIRCLE_ARROWS(0x1F503, 0x0, 0xF7E4, 0x0, "[]"),
    SPEAKER_WITH_THREE_SOUND_WAVES(0x1F50A, 0x0, 0xF6EA, 0xF782, "[]"),
    BATTERY(0x1F50B, 0x0, 0xF7A1, 0x0, "[]"),
    ELECTRIC_PLUG(0x1F50C, 0x0, 0xF7A6, 0x0, "[]"),
    LEFT_POINTING_MAGNIFYING_GLASS(0x1F50D, 0xF981, 0xF6F1, 0xF754),
    RIGHT_POINTING_MAGNIFYING_GLASS(0x1F50E, 0x0, 0xF7DC, 0x0, "[]"),
    LOCK_WITH_INK_PEN(0x1F50F, 0x0, 0xF7E3, 0x0, "[]"),
    CLOSED_LOCK_WITH_KEY(0x1F510, 0x0, 0xF7D3, 0x0, "[]"),
    KEY(0x1F511, 0xF97D, 0xF6F2, 0xF980),
    LOCK(0x1F512, 0x0, 0xF6F5, 0xF785, "[]"),
    OPEN_LOCK(0x1F513, 0x0, 0x0, 0xF786, "[]"),
    BELL(0x1F514, 0xF9B8, 0xF6EB, 0xF9C5),
    BOOKMARK(0x1F516, 0x0, 0xF7DE, 0x0, "[]"),
    LINK_SYMBOL(0x1F517, 0x0, 0xF7A7, 0x0, "[]"),
    RADIO_BUTTON(0x1F518, 0x0, 0xF7DB, 0x0, "[]"),
    BACK_WITH_LEFTWARDS_ARROW_ABOVE(0x1F519, 0x0, 0xF7DD, 0x0, "[]"),
    END_WITH_LEFTWARDS_ARROW_ABOVE(0x1F51A, 0xF95D, 0x0, 0x0, "[]"),
    ON_WITH_EXCLAMATION_MARK_WITH_LEFT_RIGHT_ARROW_ABOVE(0x1F51B, 0xF95C, 0x0, 0x0, "[]"),
    SOON_WITH_RIGHTWARDS_ARROW_ABOVE(0x1F51C, 0xF95B, 0x0, 0x0, "[]"),
    TOP_WITH_UPWARDS_ARROW_ABOVE(0x1F51D, 0x0, 0x0, 0xF7EC, "[]"),
    NO_ONE_UNDER_EIGHTEEN_SYMBOL(0x1F51E, 0x0, 0xF356, 0xF7A7, "[]"),
    KEYCAP_TEN(0x1F51F, 0x0, 0xF747, 0x0, "[]"),
    INPUT_SYMBOL_FOR_LATIN_CAPITAL_LETTERS(0x1F520, 0x0, 0xF7D4, 0x0, "[]"),
    INPUT_SYMBOL_FOR_LATIN_SMALL_LETTERS(0x1F521, 0x0, 0xF7D5, 0x0, "[]"),
    INPUT_SYMBOL_FOR_NUMBERS(0x1F522, 0x0, 0xF7D6, 0x0, "[]"),
    INPUT_SYMBOL_FOR_SYMBOLS(0x1F523, 0x0, 0xF7D7, 0x0, "[]"),
    INPUT_SYMBOL_FOR_LATIN_LETTERS(0x1F524, 0x0, 0xF459, 0x0, "[]"),
    FIRE(0x1F525, 0x0, 0xF653, 0xF75D, "[]"),
    ELECTRIC_TORCH(0x1F526, 0x0, 0xF7A0, 0x0, "[]"),
    WRENCH(0x1F527, 0xF9BD, 0xF7A4, 0x0, "[]"),
    HAMMER(0x1F528, 0x0, 0xF7FB, 0xF756, "[]"),
    NUT_AND_BOLT(0x1F529, 0x0, 0xF79E, 0x0, "[]"),
    HOCHO(0x1F52A, 0x0, 0xF79C, 0x0, "[]"),
    PISTOL(0x1F52B, 0x0, 0xF6E3, 0xF753, "[]"),
    CRYSTAL_BALL(0x1F52E, 0x0, 0xF362, 0x0, "[]"),
    SIX_POINTED_STAR_WITH_MIDDLE_DOT(0x1F52F, 0x0, 0x0, 0xF7DE, "[]"),
    JAPANESE_SYMBOL_FOR_BEGINNER(0x1F530, 0x0, 0xF658, 0xF7A9, "[]"),
    TRIDENT_EMBLEM(0x1F531, 0x0, 0x0, 0xF971, "[]"),
    BLACK_SQUARE_BUTTON(0x1F532, 0x0, 0x0, 0xF7BA, "[]"),
    WHITE_SQUARE_BUTTON(0x1F533, 0x0, 0x0, 0xF7BB, "[]"),
    LARGE_RED_CIRCLE(0x1F534, 0x0, 0xF766, 0xF7B9, "[]"),
    LARGE_BLUE_CIRCLE(0x1F535, 0x0, 0xF767, 0x0, "[]"),
    LARGE_ORANGE_DIAMOND(0x1F536, 0x0, 0xF762, 0x0, "[]"),
    LARGE_BLUE_DIAMOND(0x1F537, 0x0, 0xF763, 0x0, "[]"),
    SMALL_ORANGE_DIAMOND(0x1F538, 0x0, 0xF752, 0x0, "[]"),
    SMALL_BLUE_DIAMOND(0x1F539, 0x0, 0xF753, 0x0, "[]"),
    UP_POINTING_RED_TRIANGLE(0x1F53A, 0x0, 0xF776, 0x0, "[]"),
    DOWN_POINTING_RED_TRIANGLE(0x1F53B, 0x0, 0xF777, 0x0, "[]"),
    UP_POINTING_SMALL_RED_TRIANGLE(0x1F53C, 0x0, 0xF75F, 0x0, "[]"),
    DOWN_POINTING_SMALL_RED_TRIANGLE(0x1F53D, 0x0, 0xF75E, 0x0, "[]"),
    CLOCK_FACE_ONE_OCLOCK(0x1F550, 0x0, 0x0, 0xF964, "[]"),
    CLOCK_FACE_TWO_OCLOCK(0x1F551, 0x0, 0x0, 0xF965, "[]"),
    CLOCK_FACE_THREE_OCLOCK(0x1F552, 0x0, 0x0, 0xF966, "[]"),
    CLOCK_FACE_FOUR_OCLOCK(0x1F553, 0x0, 0x0, 0xF967, "[]"),
    CLOCK_FACE_FIVE_OCLOCK(0x1F554, 0x0, 0x0, 0xF968, "[]"),
    CLOCK_FACE_SIX_OCLOCK(0x1F555, 0x0, 0x0, 0xF969, "[]"),
    CLOCK_FACE_SEVEN_OCLOCK(0x1F556, 0x0, 0x0, 0xF96A, "[]"),
    CLOCK_FACE_EIGHT_OCLOCK(0x1F557, 0x0, 0x0, 0xF96B, "[]"),
    CLOCK_FACE_NINE_OCLOCK(0x1F558, 0x0, 0x0, 0xF96C, "[]"),
    CLOCK_FACE_TEN_OCLOCK(0x1F559, 0x0, 0x0, 0xF96D, "[]"),
    CLOCK_FACE_ELEVEN_OCLOCK(0x1F55A, 0x0, 0x0, 0xF96E, "[]"),
    CLOCK_FACE_TWELVE_OCLOCK(0x1F55B, 0x0, 0x0, 0xF96F, "[]"),
    MOUNT_FUJI(0x1F5FB, 0xF9E5, 0xF7ED, 0xF97B),
    TOKYO_TOWER(0x1F5FC, 0x0, 0xF699, 0xFBA9, "[]"),
    STATUE_OF_LIBERTY(0x1F5FD, 0x0, 0x0, 0xFBBD, "[]"),
    SILHOUETTE_OF_JAPAN(0x1F5FE, 0x0, 0xF78F, 0x0, "[]"),
    MOYAI(0x1F5FF, 0x0, 0xF470, 0x0, "[]"),
    GRINNING_FACE_WITH_SMILING_EYES(0x1F601, 0xF9F8, 0xF485, 0xFB44),
    FACE_WITH_TEARS_OF_JOY(0x1F602, 0x0, 0xF468, 0xFB52, "[]"),
    SMILING_FACE_WITH_OPEN_MOUTH(0x1F603, 0xF995, 0xF649, 0xF998),
    SMILING_FACE_WITH_OPEN_MOUTH_AND_SMILING_EYES(0x1F604, 0x0, 0x0, 0xFB55, "[]"),
    SMILING_FACE_WITH_OPEN_MOUTH_AND_COLD_SWEAT(0x1F605, 0xF9C7, 0x0, 0x0, "[]"),
    SMILING_FACE_WITH_OPEN_MOUTH_AND_TIGHTLY_CLOSED_EYES(0x1F606, 0xF9CF, 0x0, 0x0, "[]"),
    WINKING_FACE(0x1F609, 0xF9CE, 0xF7F3, 0xFB45),
    SMILING_FACE_WITH_SMILING_EYES(0x1F60A, 0x0, 0xF3A1, 0xF997, "[]"),
    FACE_SAVOURING_DELICIOUS_FOOD(0x1F60B, 0xF9F7, 0x0, 0x0, "[]"),
    RELIEVED_FACE(0x1F60C, 0xF9C6, 0xF399, 0xFB4A),
    SMILING_FACE_WITH_HEART_SHAPED_EYES(0x1F60D, 0xF9CB, 0xF7F4, 0xF746),
    SMIRKING_FACE(0x1F60F, 0xF9D1, 0xF393, 0xFB42),
    UNAMUSED_FACE(0x1F612, 0xF9CA, 0xF39D, 0xFB4E),
    FACE_WITH_COLD_SWEAT(0x1F613, 0xF9C8, 0xF7F6, 0xF748),
    PENSIVE_FACE(0x1F614, 0xF9C5, 0xF394, 0xFB43),
    CONFOUNDED_FACE(0x1F616, 0xF998, 0xF397, 0xFB47),
    FACE_THROWING_A_KISS(0x1F618, 0x0, 0xF3A3, 0xFB58, "[]"),
    KISSING_FACE_WITH_CLOSED_EYES(0x1F61A, 0x0, 0xF3A2, 0xFB57, "[]"),
    FACE_WITH_STUCK_OUT_TONGUE_AND_WINKING_EYE(0x1F61C, 0xF9CD, 0xF6C0, 0xF745),
    FACE_WITH_STUCK_OUT_TONGUE_AND_TIGHTLY_CLOSED_EYES(0x1F61D, 0x0, 0x0, 0xFB49, "[]"),
    DISAPPOINTED_FACE(0x1F61E, 0xF997, 0x0, 0xF999, "[]"),
    ANGRY_FACE(0x1F620, 0xF996, 0xF64A, 0xF99A),
    POUTING_FACE(0x1F621, 0xF9C9, 0xF461, 0xFB56),
    CRYING_FACE(0x1F622, 0xF9D3, 0xF46D, 0xFB53),
    PERSEVERING_FACE(0x1F623, 0xF9D0, 0xF396, 0xFB46),
    FACE_WITH_LOOK_OF_TRIUMPH(0x1F624, 0x0, 0xF395, 0x0, "[]"),
    DISAPPOINTED_BUT_RELIEVED_FACE(0x1F625, 0x0, 0x0, 0xFB41, "[]"),
    FEARFUL_FACE(0x1F628, 0x0, 0xF39A, 0xFB4B, "[]"),
    WEARY_FACE(0x1F629, 0x0, 0xF46B, 0x0, "[]"),
    SLEEPY_FACE(0x1F62A, 0x0, 0xF398, 0xFB48, "[]"),
    TIRED_FACE(0x1F62B, 0x0, 0xF64C, 0x0, "[]"),
    LOUDLY_CRYING_FACE(0x1F62D, 0xF9D2, 0xF64B, 0xFB51),
    FACE_WITH_OPEN_MOUTH_AND_COLD_SWEAT(0x1F630, 0x0, 0xF39F, 0xFB4F, "[]"),
    FACE_SCREAMING_IN_FEAR(0x1F631, 0xF9FC, 0xF7F5, 0xF747),
    ASTONISHED_FACE(0x1F632, 0x0, 0xF39E, 0xFB50, "[]"),
    FLUSHED_FACE(0x1F633, 0x0, 0xF39C, 0xFB4D, "[]"),
    DIZZY_FACE(0x1F635, 0xF999, 0xF7CB, 0x0, "[]"),
    FACE_WITH_MEDICAL_MASK(0x1F637, 0x0, 0xF39B, 0xFB4C, "[]"),
    GRINNING_CAT_FACE_WITH_SMILING_EYES(0x1F638, 0x0, 0xF484, 0x0, "[]"),
    CAT_FACE_WITH_TEARS_OF_JOY(0x1F639, 0x0, 0xF467, 0x0, "[]"),
    SMILING_CAT_FACE_WITH_OPEN_MOUTH(0x1F63A, 0x0, 0xF465, 0x0, "[]"),
    SMILING_CAT_FACE_WITH_HEART_SHAPED_EYES(0x1F63B, 0x0, 0xF469, 0x0, "[]"),
    CAT_FACE_WITH_WRY_SMILE(0x1F63C, 0x0, 0xF46E, 0x0, "[]"),
    KISSING_CAT_FACE_WITH_CLOSED_EYES(0x1F63D, 0x0, 0xF464, 0x0, "[]"),
    POUTING_CAT_FACE(0x1F63E, 0x0, 0xF462, 0x0, "[]"),
    CRYING_CAT_FACE(0x1F63F, 0x0, 0xF46C, 0x0, "[]"),
    WEARY_CAT_FACE(0x1F640, 0x0, 0xF46A, 0x0, "[]"),
    FACE_WITH_NO_GOOD_GESTURE(0x1F645, 0x0, 0xF3AB, 0xFB63, "[]"),
    FACE_WITH_OK_GESTURE(0x1F646, 0x0, 0xF3AC, 0xFB64, "[]"),
    PERSON_BOWING_DEEPLY(0x1F647, 0x0, 0xF3AD, 0xFB66, "[]"),
    SEE_NO_EVIL_MONKEY(0x1F648, 0x0, 0xF454, 0x0, "[]"),
    HEAR_NO_EVIL_MONKEY(0x1F649, 0x0, 0xF456, 0x0, "[]"),
    SPEAK_NO_EVIL_MONKEY(0x1F64A, 0x0, 0xF455, 0x0, "[]"),
    HAPPY_PERSON_RAISING_ONE_HAND(0x1F64B, 0x0, 0xF48A, 0x0, "[]"),
    PERSON_RAISING_BOTH_HANDS_IN_CELEBRATION(0x1F64C, 0x0, 0xF48B, 0xFB67, "[]"),
    PERSON_FROWNING(0x1F64D, 0x0, 0xF48C, 0x0, "[]"),
    PERSON_WITH_POUTING_FACE(0x1F64E, 0x0, 0xF48D, 0x0, "[]"),
    PERSON_WITH_FOLDED_HANDS(0x1F64F, 0x0, 0xF3A6, 0xFB5D, "[]"),
    ROCKET(0x1F680, 0x0, 0xF7F8, 0xF74D, "[]"),
    RAILWAY_CAR(0x1F683, 0xF8BC, 0xF68E, 0xF95E),
    HIGH_SPEED_TRAIN(0x1F684, 0xF8BE, 0x0, 0xFB75, "[]"),
    HIGH_SPEED_TRAIN_WITH_BULLET_NOSE(0x1F685, 0x0, 0xF689, 0xF95F, "[]"),
    METRO(0x1F687, 0x0, 0xF7EC, 0xFB74, "[]"),
    STATION(0x1F689, 0x0, 0xF471, 0xF979, "[]"),
    BUS(0x1F68C, 0xF8C1, 0xF688, 0xF79A),
    BUS_STOP(0x1F68F, 0x0, 0xF680, 0xF791, "[]"),
    AMBULANCE(0x1F691, 0x0, 0xF3B4, 0xFB71, "[]"),
    FIRE_ENGINE(0x1F692, 0x0, 0xF3B3, 0xFB70, "[]"),
    POLICE_CAR(0x1F693, 0x0, 0xF3B5, 0xFB72, "[]"),
    TAXI(0x1F695, 0x0, 0x0, 0xF79B, "[]"),
    AUTOMOBILE(0x1F697, 0xF8BF, 0xF68A, 0xF95B),
    RECREATIONAL_VEHICLE(0x1F699, 0xF8C0, 0x0, 0xFB6E, "[]"),
    DELIVERY_TRUCK(0x1F69A, 0x0, 0xF68B, 0xFB6F, "[]"),
    SHIP(0x1F6A2, 0xF8C2, 0xF355, 0xF7A2),
    SPEEDBOAT(0x1F6A4, 0x0, 0x0, 0xF775, "[]"),
    HORIZONTAL_TRAFFIC_LIGHT(0x1F6A5, 0xF8CE, 0xF642, 0xF78F),
    CONSTRUCTION_SIGN(0x1F6A7, 0x0, 0xF34A, 0xF777, "[]"),
    POLICE_CARS_REVOLVING_LIGHT(0x1F6A8, 0x0, 0xF477, 0x0, "[]"),
    TRIANGULAR_FLAG_ON_POST(0x1F6A9, 0xF983, 0xF3ED, 0x0, "[]"),
    DOOR(0x1F6AA, 0xF9B9, 0x0, 0x0, "[]"),
    NO_ENTRY_SIGN(0x1F6AB, 0x0, 0xF75D, 0x0, "[]"),
    SMOKING_SYMBOL(0x1F6AC, 0xF8E0, 0xF655, 0xF9AE),
    NO_SMOKING_SYMBOL(0x1F6AD, 0xF8E1, 0xF656, 0xF7A8),
    BICYCLE(0x1F6B2, 0xF9C2, 0xF687, 0xF776),
    PEDESTRIAN(0x1F6B6, 0x0, 0xF476, 0xF7A1, "[]"),
    MENS_SYMBOL(0x1F6B9, 0x0, 0x0, 0xF778, "[]"),
    WOMENS_SYMBOL(0x1F6BA, 0x0, 0x0, 0xF779, "[]"),
    RESTROOM(0x1F6BB, 0xF8CF, 0xF67D, 0xF792),
    BABY_SYMBOL(0x1F6BC, 0x0, 0x0, 0xF77A, "[]"),
    TOILET(0x1F6BD, 0x0, 0x0, 0xF781, "[]"),
    WATER_CLOSET(0x1F6BE, 0x0, 0x0, 0xF9A9, "[]"),
    BATH(0x1F6C0, 0x0, 0xF34B, 0xF780, "[]"),
    //
    ;

    private static final Emoji[] CODE_POINTS = new Emoji[0x1FFFF];
    private static final Emoji[] CAPS_CAHERS = new Emoji[0x003A];
    static {
        for (Emoji emoji : Emoji.values()) {
            if (emoji.codePoint == 0) continue;
            CODE_POINTS[emoji.codePoint] = emoji;
        }
        CAPS_CAHERS[0x0023] = NUMBER_SIGN_WITH_KEYCAP;
        CAPS_CAHERS[0x0030] = ZERO_WITH_KEYCAP;
        CAPS_CAHERS[0x0031] = ONE_WITH_KEYCAP;
        CAPS_CAHERS[0x0032] = TWO_WITH_KEYCAP;
        CAPS_CAHERS[0x0033] = THREE_WITH_KEYCAP;
        CAPS_CAHERS[0x0034] = FOUR_WITH_KEYCAP;
        CAPS_CAHERS[0x0035] = FIVE_WITH_KEYCAP;
        CAPS_CAHERS[0x0036] = SIX_WITH_KEYCAP;
        CAPS_CAHERS[0x0037] = SEVEN_WITH_KEYCAP;
        CAPS_CAHERS[0x0038] = EIGNT_WITH_KEYCAP;
        CAPS_CAHERS[0x0039] = NINE_WITH_KEYCAP;
    }

    /**
     * コードポイントを指定してEmojiを取得する
     * @param codePoint コードポイント
     * @return 絵文字、対応する絵文字がない場合はnull
     */
    public static Emoji charOf(int codePoint) {
        return CODE_POINTS[codePoint];
    }

    /**
     * 四角付きの特殊絵文字を取得する。
     * <p>
     * 四角＃、四角０〜四角９の11種の絵文字を取得する。
     * </p>
     * @param codePoint コードポイント
     * @return 絵文字
     */
    public static Emoji capsCharOf(int codePoint) {
        return CAPS_CAHERS[codePoint];
    }

    /** code point of unicode */
    private final int codePoint;
    /** chars */
    private final char[] chars;
    /** 絵文字コード（Docomo） */
    private final int docomo;
    /** 絵文字コード（KDDI） */
    private final int kddi;
    /** 絵文字コード（Softbank） */
    private final int softbank;
    /** 代替文字列 */
    private final String fallbackText;

    private Emoji(int codePoint, int docomo, int kddi, int softbank) {
        this(codePoint, null, docomo, kddi, softbank, null);
    }

    private Emoji(int codePoint, int docomo, int kddi, int softbank, String fallbackText) {
        this(codePoint, null, docomo, kddi, softbank, fallbackText);
    }

    private Emoji(char[] chars, int docomo, int kddi, int softbank) {
        this(0, chars, docomo, kddi, softbank, null);
    }

    private Emoji(int codePoint, char[] chars, int docomo, int kddi, int softbank, String fallbackText) {
        this.codePoint = codePoint;
        this.chars = chars;
        this.docomo = docomo;
        this.kddi = kddi;
        this.softbank = softbank;
        this.fallbackText = fallbackText;
    }

    /**
     * 絵文字をUnicode文字の配列として取得する
     * @return 文字配列
     */
    public char[] toChars() {
        if (chars != null) return chars;
        return Character.toChars(codePoint);
    }

    /**
     * Docomoの絵文字コード（SJIS）を取得する
     * @return SJISの絵文字コード（２バイトまたは４バイト）
     */
    public byte[] toDocomoCode() {
        if (docomo == 0x00) return null;
        if (0 <= docomo && docomo <= 0xFFFF) {
            return new byte[] {
                    (byte) (docomo >> 8 & 0xFF), (byte) (docomo & 0xFF)
            };
        } else {
            return new byte[] {
                    (byte) (docomo >> 24 & 0xFF),
                    (byte) (docomo >> 16 & 0xFF),
                    (byte) (docomo >> 8 & 0xFF),
                    (byte) (docomo & 0xFF)
            };
        }
    }

    /**
     * KDDIの絵文字コード（SJIS）を取得する
     * @return SJISの絵文字コード（２バイトまたは４バイト）
     */
    public byte[] toKddiCode() {
        if (kddi == 0x00) return null;
        if (0 <= kddi && kddi <= 0xFFFF) {
            return new byte[] {
                    (byte) (kddi >> 8 & 0xFF), (byte) (kddi & 0xFF)
            };
        } else {
            return new byte[] {
                    (byte) (kddi >> 24 & 0xFF),
                    (byte) (kddi >> 16 & 0xFF),
                    (byte) (kddi >> 8 & 0xFF),
                    (byte) (kddi & 0xFF)
            };
        }
    }

    /**
     * Softbankの絵文字コード（SJIS）を取得する
     * @return SJISの絵文字コード（２バイトまたは４バイト）
     */
    public byte[] toSoftbankCode() {
        if (softbank == 0x00) return null;
        if (0 <= softbank && softbank <= 0xFFFF) {
            return new byte[] {
                    (byte) (softbank >> 8 & 0xFF), (byte) (softbank & 0xFF)
            };
        } else {
            return new byte[] {
                    (byte) (softbank >> 24 & 0xFF),
                    (byte) (softbank >> 16 & 0xFF),
                    (byte) (softbank >> 8 & 0xFF),
                    (byte) (softbank & 0xFF)
            };
        }
    }

    /**
     * 代替テキストを取得する
     * @return 代替テキスト、ない場合はnull
     */
    public String fallbackText() {
        return fallbackText;
    }

    /*
     * (non-Javadoc)
     * @see java.lang.Enum#toString()
     */
    @Override
    public String toString() {
        if (chars != null) return new String(chars);
        return new String(new int[] {
            codePoint
        }, 0, 1);
    }

}
